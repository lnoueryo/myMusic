import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useSelector } from 'react-redux';
import store from '../store'
import Footer from './components/Footer'
import Card from './components/Card'
export default function Home() {
  // https://gray-code.com/javascript/property-and-method-and-event-list-of-audioelement-and-videoelement/
{/* <fieldset>
  <legend>Equalizer</legend>
  
  <label orient='270deg' type='range' for="band" before="-5" after="5">0</label>
  
  <input orient='270deg' type='range' min='0' value='2' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='2' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='2' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='4' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='3' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='3' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='6' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='7' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='7' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='8' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='8' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='6' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='5' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='6' max='9' step='1' />
  <input orient='270deg' type='range' min='0' value='6' max='9' step='1' />

  <label orient='90deg' type='range' for="band" before="5" after="-5">0</label>

</fieldset> */}
  const state = store.getState()
  const selectedMusic = useSelector(state => state.audio.duration);
  // const dispatch = useDispatch()
  // const onSelectMusic = (src) => {
  //   const action = changeAudioSrc(src)
  //   dispatch(action)
  // }
  return (
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
        {selectedMusic}
          {
            state.audio.songs.map(song => <Card key={song.id} {...song} />)
          }
          
          {/* <div className={styles.grid}>
            <div className={styles.card} onClick={onSelectMusic('sakura.mp3')}>
              <h2>Documentation &rarr;</h2>
              <p>Find in-depth information about Next.js features and API.</p>
            </div>
          </div> */}

          <p className={styles.description}>
            Get started by editing{' '}
            <code className={styles.code}>pages/index.js</code>
          </p>

          <div className={styles.grid}>
            <a href="https://nextjs.org/docs" className={styles.card}>
              <h2>Documentation &rarr;</h2>
              <p>Find in-depth information about Next.js features and API.</p>
            </a>

            <a href="https://nextjs.org/learn" className={styles.card}>
              <h2>Learn &rarr;</h2>
              <p>Learn about Next.js in an interactive course with quizzes!</p>
            </a>

            <a
              href="https://github.com/vercel/next.js/tree/canary/examples"
              className={styles.card}
            >
              <h2>Examples &rarr;</h2>
              <p>Discover and deploy boilerplate example Next.js projects.</p>
            </a>

            <a
              href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              className={styles.card}
            >
              <h2>Deploy &rarr;</h2>
              <p>
                Instantly deploy your Next.js site to a public URL with Vercel.
              </p>
            </a>
          </div>
        </main>

        {/* <footer className={styles.footer}>
          <audio controls ref={audio} src={'/' + audioSrc}>
            あなたのブラウザーは <code>audio</code>要素をサポートしていません。
          </audio>
          <div className={styles.range}>
            <input type="range" min={MIN_RANGE} max={MAX_RANGE} ref={range} step="1" onChange={onChangeTime} />
          </div>
          <div>
            <div className={styles['song-name']}>
              {songName}
            </div>
            <div>
              <Icon path={mdiRewind}
                className={styles['controller-icon']}
                size={2}
                color="red"
              />
              {
                playToggle ?
                <Icon path={mdiPlay}
                  className={styles['controller-icon']}
                  size={2}
                  color="red"
                  onClick={onPlayOrPause}
                />
                :
                <Icon path={mdiPause}
                  className={styles['controller-icon']}
                  size={2}
                  color="red"
                  onClick={onPlayOrPause}
                />

              }
              <Icon path={mdiFastForward}
                className={styles['controller-icon']}
                size={2}
                color="red"
              />
            </div>
          </div>
        </footer> */}
        {/* {state.audio.audioSrc && <Footer key="A" />} */}
        <Footer />
      </div>
  )
}

